{"version":3,"sources":["components/AuthComponents/SignInButton.js","authConfig.js","components/AuthComponents/SignOutButton.js","components/AuthComponents/GetToken.js","components/APICaller.js","components/apidescriptions.js","api/azurefunctions.js","api/logicapp.js","api/aks.js","components/HomePage.js","App.js","index.js"],"names":["SignInButton","instance","useMsal","className","onClick","loginRedirect","signInClickHandler","loginRequest","scopes","msalConfig","auth","clientId","authority","redirectUri","process","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","LogLevel","Error","console","error","Info","info","Verbose","debug","warn","SignOutButton","log","logoutRequest","account","getAccountByHomeId","postLogoutRedirectUri","logoutRedirect","signOutClickHandler","ProfileContent","props","accounts","useEffect","acquireTokenSilent","then","response","a","setToken","accessToken","APICaller","useState","apiData","setApiData","apicall","token","name","JSON","stringify","CallAzureFunction","options","headers","axios","get","funfact","data","CallLogicApp","CallAKS_KubernetesFunFact","i","Math","floor","random","funfacts","length","fun_fact","CallAKS_MicrosoftFunFact","HomePage","state","selectedFile","loading","responseImage","jwtToken","bind","this","setState","rel","target","href","description","Component","App","isAuthenticated","useIsAuthenticated","publicClientApplication","PublicClientApplication","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a870af7.chunk.js","sourcesContent":["import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport \"./SignInButton.css\"\n\nfunction signInClickHandler(instance) {\n    instance.loginRedirect();\n}\n\n// SignInButton Component returns a button that invokes a popup login when clicked\nexport default function SignInButton() {\n    // useMsal hook will return the PublicClientApplication instance you provided to MsalProvider\n    const { instance } = useMsal();\n\n    return <div className=\"SignInButtonDiv\" ><button className=\"SignInButton\" onClick={() => signInClickHandler(instance)}>Sign In</button></div>\n};","import { LogLevel } from \"@azure/msal-browser\";\n\n// export const postLogoutRedirectUri = \"http://localhost:3000\"\nexport const postLogoutRedirectUri = process.env.REACT_APP_POST_LOGOUT_REDIRECT_URL\n// export const postLogoutRedirectUri = \"https://dariv94.github.io/fgr-secure-api/\"\n\nexport const loginRequest = {\n    scopes: [\"openid\",\"https://fgrsolutionsb2c.onmicrosoft.com/f5e3ba4f-960f-44c0-bd3d-1f0c4c959f0c/Hello\"] // might be able to remove the hello\n  };\n\nexport const msalConfig = {\n    auth: {\n        clientId: \"4bb294af-8713-4f8e-913d-a7fb84eba271\", //client of frontend app registration\n        authority: \"https://fgrsolutionsb2c.b2clogin.com/fgrsolutionsb2c.onmicrosoft.com/B2C_1_FGR_Secure_app_Frontend_signupandsignin\", //before https://login.microsoftonline/com/common\n        redirectUri: process.env.REACT_APP_LOGIN_REDIRECT_URL\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n    },\n    system: {\t\n        loggerOptions: {\t\n            loggerCallback: (level, message, containsPii) => {\t\n                if (containsPii) {\t\t\n                    return;\t\t\n                }\t\t\n                switch (level) {\t\t\n                    case LogLevel.Error:\t\t\n                        console.error(message);\t\t\n                        return;\t\t\n                    case LogLevel.Info:\t\t\n                        console.info(message);\t\t\n                        return;\t\t\n                    case LogLevel.Verbose:\t\t\n                        console.debug(message);\t\t\n                        return;\t\t\n                    default:\t\n                        console.warn(message);\t\t\n                    // case LogLevel.Warning:\t\t\n                    //     console.warn(message);\t\t\n                        return;\t\t\n                }\t\n            }\t\n        }\t\n    }\n  };","import { useMsal } from \"@azure/msal-react\";\nimport { postLogoutRedirectUri } from \"../../authConfig\"\nimport \"./SignOutButton.css\"\n\nfunction signOutClickHandler(instance) {\n    console.log(\"instance: \", instance)\n    const logoutRequest = {\n        account: instance.getAccountByHomeId(\"homeAccountId\"),\n        postLogoutRedirectUri: postLogoutRedirectUri\n    }\n    instance.logoutRedirect(logoutRequest);\n}\n\n// SignOutButton Component returns a button that invokes a redirect logout when clicked\nexport default function SignOutButton() {\n    // useMsal hook will return the PublicClientApplication instance you provided to MsalProvider\n    const { instance } = useMsal();\n\n    // <div className=\"SignInButtonDiv\" ><button className=\"SignInButton\" onClick={() => signInClickHandler(instance)}>Sign In</button></div>\n    return <div className=\"SignOutButtonDiv\" ><button  className=\"SignOutButton\" onClick={() => signOutClickHandler(instance)}>Sign Out</button></div>\n};","import { useMsal } from \"@azure/msal-react\";\nimport React, { useEffect } from \"react\";\nimport { loginRequest } from \"../../authConfig\"\n\nexport default function ProfileContent(props) {\n    const { instance, accounts } = useMsal();\n\n    //The User should be Authenticated already\n    // Otherwise I would use const isAuthenticated = useIsAuthenticated();\n    useEffect(() => {\n        instance.acquireTokenSilent({\n            ...loginRequest,\n            account: accounts[0]\n        }).then(async (response) => {\n            console.log(\"RequestProfileData response:\", response)\n            props.setToken(response.accessToken)\n\n        });\n    });\n\n    return (<></>)\n}","// import { useMsal } from \"@azure/msal-react\";\nimport React, { useState } from \"react\";\nimport \"./APICaller.css\"\n// import { loginRequest } from \"../../authConfig\"\n// import { CallMockAPIEndpoint } from \"../../api/azurefunctions\"\n\n// import { useIsAuthenticated } from \"@azure/msal-react\";\n\nexport default function APICaller(props) {\n    // const { instance, accounts } = useMsal();\n    const [apiData, setApiData] = useState(null);\n    // const [graphData, setGraphData] = useState(null);\n    // const [backendMockData, setBackendMockData] = useState(null);\n\n    // const isAuthenticated = useIsAuthenticated();\n\n    //The User should be Authenticated already\n    // Otherwise I would use const isAuthenticated = useIsAuthenticated();\n    // useEffect(() => {\n    //     instance.acquireTokenSilent({\n    //         ...loginRequest,\n    //         account: accounts[0]\n    //     }).then(async (response) => {\n    //         console.log(\"RequestProfileData response:\", response)\n    //         props.setToken(response.accessToken)\n\n    //     });\n    // }, []);\n\n    // function RequestProfileData() {\n    //     console.log(\"RequestProfileData MSAL instance\", instance)\n    //     console.log(\"RequestProfileData MSAL accounts\", accounts)\n    //     // Silently acquires an access token which is then attached to a request for MS Graph data\n    //     instance.acquireTokenSilent({\n    //         ...loginRequest,\n    //         account: accounts[0]\n    //     }).then(async (response) => {\n    //         console.log(\"RequestProfileData response:\", response)\n    //         setGraphData(response)\n\n    //     });\n    // }\n\n    async function RequestAPIData() {\n        let apicall = props.apicall\n        let response = await apicall(props.token)\n        // console.log(\"RequestAPIData:\", response)\n        // console.log(typeof(response))\n        setApiData(response)\n    }\n\n    function ResetAPIData() {\n        setApiData(\"\")\n    }\n\n\n\n    return (<>\n        <div className=\"APICallerDIV\">\n            <div className=\"APICallerNameDIV\">\n                <h5 className=\"APICallerName\" >{props.name}</h5>\n            </div>\n\n            {/* <p>{props.description}</p> */}\n            <div className=\"APICallerFunFactBtnDIV\">\n                <button className=\"APICallerFunFactBtn\" onClick={RequestAPIData} >GET FUN FACT</button>\n            </div>\n\n            <div className=\"APICallerDataDIV\">\n                {apiData ? <p className=\"APICallerData\" >{JSON.stringify(apiData)}</p> : <p className=\"APICallerData\" >No API Data</p>}\n            </div>\n            <div className=\"APICallerClearBtnDIV\">\n                <button className=\"APICallerClearBtn\" onClick={ResetAPIData} >Clear Fun Fact</button>\n            </div>\n\n        </div>\n\n\n    </>)\n}","\n\nexport const kubernetesfunfactdescription=`\nThis endpoint returns 1 of 5 random fun facts about Kubernetes.\nThis Azure Kubernetes Service API endpoint uses a Mutual TLS connection with API Managment to secure access to its API. \nWithin the AKS Cluster, traffic is routed to this specifc API based on the Ingress Resource routing definitions.\nData is pulled from a persisting Azure Disc outside the cluster.`\n\nexport const microsoftfunfactdescription=`\nThis endpoint returns 1 of 5 random fun facts about Microsoft.\nThis Azure Kubernetes Service API endpoint uses a Mutual TLS connection with API Managment to secure access to its API. \nWithin the AKS Cluster, traffic is routed to this specifc API based on the Ingress Resource routing definitions.\nData is pulled from a persisting Azure Disc outside the cluster.`\n\nexport const computerhistoryfunfactdescription=`\nThis endpoint returns 1 of 5 random fun facts about the history of computers.\nThis Azure Function App endpoint pulls data from an Azure Table Storage database.\nThis demonstates the use of an Azure Function within an Azure API Management instance that uses several other types of backend APIS`\n\nexport const frankierivierafunfactdescription=`\nThis endpoint returns 1 of 5 random fun facts about the me. (Frankie Riviera).\nThis Azure Logic App endpoint pulls data from an Azure Table Storage database.\nThis demonstates the use of an Azure Logic App within an Azure API Management instance that uses several other types of backend APIS`","import axios from \"axios\";\n\nexport async function CallAzureFunction(accessToken){\n  \n    const options = {\n      headers: {'jwtAuthorization': accessToken}\n    };\n    \n    let response = await axios.get('https://fgr-secure-api-management.azure-api.net/function-app/ComputerFunFacts', options);\n    // console.log(\"CallAzureFunction response: \",response)\n    \n    const funfact = response.data.funfact\n    \n    return funfact\n}","import axios from \"axios\";\n\nexport async function CallLogicApp(accessToken){\n  \n    const options = {\n      headers: {'jwtAuthorization': accessToken}\n    };\n    \n    let response = await axios.get('https://fgr-secure-api-management.azure-api.net/frankie/request/paths/invoke/', options);\n    // console.log(\"CallLogicApp response: \",response)\n    \n    const funfact = response.data.funfact\n    \n    return funfact\n}","import axios from \"axios\";\n\nexport async function CallAKS_KubernetesFunFact(accessToken){\n  \n    const options = {\n      headers: {'jwtAuthorization': accessToken}\n    };\n    \n    let response = await axios.get('https://fgr-secure-api-management.azure-api.net/aks/kubernetes/funfact', options);\n\n    let i = Math.floor(Math.random() * response.data.funfacts.length); \n    \n    const funfact = response.data.funfacts[i].fun_fact\n    \n    return funfact\n}\n\nexport async function CallAKS_MicrosoftFunFact(accessToken){\n  \n    const options = {\n      headers: {'jwtAuthorization': accessToken}\n    };\n    \n    let response = await axios.get('https://fgr-secure-api-management.azure-api.net/aks/microsoft/funfact', options);\n    \n    let i = Math.floor(Math.random() * response.data.funfacts.length); \n    \n    const funfact = response.data.funfacts[i].fun_fact\n    \n    return funfact\n}\n","\n// Check out https://docs.microsoft.com/en-us/azure/active-directory/develop/scenario-spa-sign-in?tabs=react\n// getting access token https://docs.microsoft.com/en-us/azure/active-directory/develop/scenario-spa-acquire-token?tabs=react\nimport { AuthenticatedTemplate, UnauthenticatedTemplate } from \"@azure/msal-react\";\nimport React, { Component } from 'react';\nimport \"./HomePage.css\"\nimport SignInButton from \"./AuthComponents/SignInButton\"\nimport SignOutButton from \"./AuthComponents/SignOutButton\"\n// import WelcomeUser from \"./WelcomUser\"\n// import ProfileContent from \"./AuthComponents/ProfileContent\"\nimport GetToken from \"./AuthComponents/GetToken\"\nimport APICaller from \"./APICaller\"\nimport {kubernetesfunfactdescription, microsoftfunfactdescription, computerhistoryfunfactdescription, frankierivierafunfactdescription} from \"./apidescriptions\"\nimport { CallAzureFunction } from \"../api/azurefunctions\"\nimport { CallLogicApp } from \"../api/logicapp\"\nimport { CallAKS_KubernetesFunFact, CallAKS_MicrosoftFunFact } from \"../api/aks\"\n\nexport class HomePage extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            selectedFile: \"\",\n            loading: false,\n            responseImage: \"\",\n            message: \"Select a file to upload.\",\n            jwtToken: \"\"\n\n        }\n\n        this.setToken = this.setToken.bind(this)\n    }\n\n    setToken(token) {\n        this.setState({\n            jwtToken: token\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"HomePageDiv\" >\n                <h1 className=\"topheader\">FGR Secure API</h1>\n                <AuthenticatedTemplate>\n                        <div className=\"HomeInfoDiv\">\n                        <p>\n                            You can learn more about this live demo <a rel=\"noreferrer\" target=\"_blank\" href=\"https://frankieriviera.com\" >HERE</a>\n                        </p>\n                        </div>\n                    {/* <p>This will only render if a user is signed-in.</p>\n                    {this.state.jwtToken ? <p>TOKEN READY FOR API CALLS!</p>:<p>NO TOKEN</p>} */}\n                    {/* <WelcomeUser /> */}\n                    {/* <ProfileContent setToken={this.setToken}/> */}\n                    {!this.state.jwtToken && <GetToken setToken={this.setToken} />}\n                    <hr></hr>\n                    <APICaller name={\"Azure Kubernetes Service endpoint - Kubernetes Fun Facts\"} description={kubernetesfunfactdescription}  apicall={CallAKS_KubernetesFunFact} token={this.state.jwtToken} />\n                    <hr></hr>\n                    <APICaller name={\"Azure Kubernetes Service endpoint - Microsoft Fun Facts\"} description={microsoftfunfactdescription} apicall={CallAKS_MicrosoftFunFact} token={this.state.jwtToken} />\n                    <hr></hr>\n                    <APICaller name={\"Azure Function App endpoint - Computer History Fun Facts\"} description={computerhistoryfunfactdescription} apicall={CallAzureFunction} token={this.state.jwtToken} />\n                    <hr></hr>\n                    <APICaller name={\"Azure Logic App endpoint - Frankie Riviera Fun Facts\"} description={frankierivierafunfactdescription} apicall={CallLogicApp} token={this.state.jwtToken} />\n                    <hr></hr>\n                    {/* <APICaller name={\"MOCK ENDPOINT\"} apicall={CallMockEndpoint} token={this.state.jwtToken} />\n                    <hr></hr> */}\n\n\n                    <SignOutButton />\n\n\n                </AuthenticatedTemplate>\n                <UnauthenticatedTemplate>\n                    <div className=\"HomeInfoDiv\">\n                        <p>\n                            This UI demonstates the use of Azure Active Directory B2C in a Single Page Application.\n                            It also demonstates access to backend APIs through the use of an Azure API Managment Gateway.\n                            The APIs accessed through this gate way include Two different APIs within a Azure Kuberentes Service Cluster, An Azure Function, and an Azure Logic App.\n                            Sign in using an existing Microsoft account, or Signup with an email to test out the Live APIS.\n                        </p>\n                        </div>\n                    <SignInButton />\n                </UnauthenticatedTemplate>\n\n            </div>\n        )\n    }\n}\n\n\nexport default HomePage;\n","\nimport React from \"react\";\nimport HomePage from \"./components/HomePage\"\n// import { withMsal } from \"@azure/msal-react\";\nimport { useIsAuthenticated } from \"@azure/msal-react\";\n\n// const WithMsalHomePage = withMsal(HomePage);\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props)\n// }\n//   render() {\n//       return (\n          \n//               <WithMsalHomePage instance={this.props.instance} />\n          \n//       );\n//   }\n// }\n\nfunction App(props) {\n  const isAuthenticated = useIsAuthenticated();\n  console.log(\"APP isAuthenticated: \",isAuthenticated)\n  return (\n    <>\n      <HomePage instance={props.instance} isAuthenticated={isAuthenticated}/>\n      {/* <WithMsalHomePage instance={props.instance} /> */}\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport App from './App';\nimport { msalConfig } from \"./authConfig\";\n\n// create PublicClientApplication instance\nconst publicClientApplication = new PublicClientApplication(msalConfig);\n\n// Wrap your app component tree in the MsalProvider component\nReactDOM.render(\n    <React.StrictMode>\n        <MsalProvider instance={publicClientApplication}>\n            <App instance={publicClientApplication} />\n        </ MsalProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}