{"version":3,"sources":["components/AuthComponents/SignInButton.js","authConfig.js","components/AuthComponents/SignOutButton.js","components/AuthComponents/GetToken.js","components/APICaller.js","api/apimanagementmockapi.js","api/azurefunctions.js","api/aks.js","components/HomePage.js","App.js","index.js"],"names":["SignInButton","instance","useMsal","onClick","loginRedirect","signInClickHandler","loginRequest","scopes","msalConfig","auth","clientId","authority","redirectUri","process","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","LogLevel","Error","console","error","Info","info","Verbose","debug","warn","SignOutButton","log","logoutRequest","account","getAccountByHomeId","postLogoutRedirectUri","logoutRedirect","signOutClickHandler","ProfileContent","props","accounts","useEffect","acquireTokenSilent","then","response","a","setToken","accessToken","APICaller","useState","apiData","setApiData","apicall","token","name","JSON","stringify","CallMockAPIEndpoint","options","headers","axios","get","data","CallAzureFunction","CallAKS_KubernetesFunFact","i","Math","floor","random","funfacts","length","funfact","fun_fact","CallAKS_MicrosoftFunFact","HomePage","state","selectedFile","loading","responseImage","jwtToken","bind","this","setState","className","Component","App","isAuthenticated","useIsAuthenticated","publicClientApplication","PublicClientApplication","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAQe,SAASA,IAEpB,IAAQC,EAAaC,cAAbD,SAER,OAAO,wBAAQE,QAAS,kBAT5B,SAA4BF,GACxBA,EAASG,gBAQqBC,CAAmBJ,IAA1C,qBCTJ,IAGMK,EAAe,CACxBC,OAAQ,CAAC,SAAS,wDAAwD,2DAIjEC,EAAa,CACtBC,KAAM,CACFC,SAAU,uCACVC,UAAW,2FAEXC,YAAaC,6CAIjBC,MAAO,CACHC,cAAe,iBACfC,wBAAwB,GAE5BC,OAAQ,CACJC,cAAe,CACXC,eAAgB,SAACC,EAAOC,EAASC,GAC7B,IAAIA,EAGJ,OAAQF,GACJ,KAAKG,IAASC,MAEV,YADAC,QAAQC,MAAML,GAElB,KAAKE,IAASI,KAEV,YADAF,QAAQG,KAAKP,GAEjB,KAAKE,IAASM,QAEV,YADAJ,QAAQK,MAAMT,GAElB,QAII,YAHAI,QAAQM,KAAKV,QC5BtB,SAASW,IAEpB,IAAQ/B,EAAaC,cAAbD,SAER,OAAO,wBAAQE,QAAS,kBAd5B,SAA6BF,GACzBwB,QAAQQ,IAAI,aAAchC,GAC1B,IAAMiC,EAAgB,CAClBC,QAASlC,EAASmC,mBAAmB,iBACrCC,sBDJ6BxB,6CCMjCZ,EAASqC,eAAeJ,GAQMK,CAAoBtC,IAA3C,sB,mCCbI,SAASuC,EAAeC,GACnC,MAA+BvC,cAAvBD,EAAR,EAAQA,SAAUyC,EAAlB,EAAkBA,SAelB,OAXAC,qBAAU,WACN1C,EAAS2C,mBAAT,2BACOtC,GADP,IAEI6B,QAASO,EAAS,MACnBG,KAHH,uCAGQ,WAAOC,GAAP,SAAAC,EAAA,sDACJtB,QAAQQ,IAAI,+BAAgCa,GAC5CL,EAAMO,SAASF,EAASG,aAFpB,2CAHR,0DAUI,6B,WCbG,SAASC,EAAUT,GAE9B,MAA8BU,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAFqC,4CAmCrC,8BAAAN,EAAA,6DACQO,EAAUb,EAAMa,QADxB,SAEyBA,EAAQb,EAAMc,OAFvC,OAEQT,EAFR,OAKIO,EAAWP,GALf,4CAnCqC,sBAiDrC,OAAQ,qCACJ,sCAASL,EAAMe,QACf,yBAAQrD,QAnDyB,2CAmDjC,kBAAwCsC,EAAMe,QAE7CJ,EAAU,mCAAGK,KAAKC,UAAUN,KAAe,4CAC5C,wBAAQjD,QAXX,WACGkD,EAAW,KAUX,+B,oBC3DD,SAAeM,EAAtB,kC,4CAAO,WAAmCV,GAAnC,iBAAAF,EAAA,6DAEGa,EAAU,CACdC,QAAS,CAAC,cAAiBZ,IAH1B,SAMkBa,IAAMC,IAAI,gEAAiEH,GAN7F,cAMCd,EAND,yBASIA,EAASkB,MATb,4C,sBCAA,SAAeC,EAAtB,kC,4CAAO,WAAiChB,GAAjC,iBAAAF,EAAA,6DAEGa,EAAU,CACdC,QAAS,CAAC,cAAiBZ,IAH1B,SAMkBa,IAAMC,IAAI,yFAA0FH,GANtH,cAMCd,EAND,yBASIA,EAASkB,MATb,4C,sBCAA,SAAeE,EAAtB,kC,4CAAO,WAAyCjB,GAAzC,qBAAAF,EAAA,6DAEGa,EAAU,CACdC,QAAS,CAAC,cAAiBZ,IAH1B,SAMkBa,IAAMC,IAAI,yEAA0EH,GANtG,cAMCd,EAND,OAQCqB,EAAIC,KAAKC,MAAMD,KAAKE,SAAWxB,EAASkB,KAAKO,SAASC,QAEpDC,EAAU3B,EAASkB,KAAKO,SAASJ,GAAGO,SAVvC,kBAYID,GAZJ,4C,sBAeA,SAAeE,EAAtB,kC,4CAAO,WAAwC1B,GAAxC,qBAAAF,EAAA,6DAEGa,EAAU,CACdC,QAAS,CAAC,cAAiBZ,IAH1B,SAMkBa,IAAMC,IAAI,wEAAyEH,GANrG,cAMCd,EAND,OAQCqB,EAAIC,KAAKC,MAAMD,KAAKE,SAAWxB,EAASkB,KAAKO,SAASC,QAEpDC,EAAU3B,EAASkB,KAAKO,SAASJ,GAAGO,SAVvC,kBAYID,GAZJ,4C,sBCDA,IA0DQG,EA1Df,kDAEI,WAAYnC,GAAQ,IAAD,8BACf,cAAMA,IAEDoC,MAAQ,CACTC,aAAc,GACdC,SAAS,EACTC,cAAe,GACf3D,QAAS,2BACT4D,SAAU,IAId,EAAKjC,SAAW,EAAKA,SAASkC,KAAd,gBAZD,EAFvB,4CAiBI,SAAS3B,GACL4B,KAAKC,SAAS,CACVH,SAAU1B,MAnBtB,oBAuBI,WACI,OACI,gCACI,oBAAI8B,UAAU,YAAd,wBACA,eAAC,IAAD,WAKI,cAAC,EAAD,CAAUrC,SAAUmC,KAAKnC,WAEzB,uBACA,cAACE,EAAD,CAAWM,KAAM,gBAAiBF,QAASK,EAAqBJ,MAAO4B,KAAKN,MAAMI,WAClF,uBACA,cAAC/B,EAAD,CAAWM,KAAM,0BAA2BF,QAASW,EAAmBV,MAAO4B,KAAKN,MAAMI,WAC1F,uBACA,cAAC/B,EAAD,CAAWM,KAAM,0CAA2CF,QAASY,EAA2BX,MAAO4B,KAAKN,MAAMI,WAClH,uBACA,cAAC/B,EAAD,CAAWM,KAAM,yCAA0CF,QAASqB,EAA0BpB,MAAO4B,KAAKN,MAAMI,WAChH,uBACA,cAACjD,EAAD,OAIJ,cAAC,IAAD,UAEI,cAAChC,EAAD,aAjDpB,GAA8BsF,aCgBfC,MAXf,SAAa9C,GACX,IAAM+C,EAAkBC,cAExB,OADAhE,QAAQQ,IAAI,wBAAwBuD,GAElC,mCACE,cAAC,EAAD,CAAUvF,SAAUwC,EAAMxC,SAAUuF,gBAAiBA,OClBrDE,EAA0B,IAAIC,IAAwBnF,GAG5DoF,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAc7F,SAAUyF,EAAxB,SACI,cAAC,EAAD,CAAKzF,SAAUyF,QAGvBK,SAASC,eAAe,W","file":"static/js/main.c75ea049.chunk.js","sourcesContent":["import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\n\nfunction signInClickHandler(instance) {\n    instance.loginRedirect();\n}\n\n// SignInButton Component returns a button that invokes a popup login when clicked\nexport default function SignInButton() {\n    // useMsal hook will return the PublicClientApplication instance you provided to MsalProvider\n    const { instance } = useMsal();\n\n    return <button onClick={() => signInClickHandler(instance)}>Sign In</button>\n};","import { LogLevel } from \"@azure/msal-browser\";\n\n// export const postLogoutRedirectUri = \"http://localhost:3000\"\nexport const postLogoutRedirectUri = process.env.REACT_APP_POST_LOGOUT_REDIRECT_URL\n// export const postLogoutRedirectUri = \"https://dariv94.github.io/fgr-secure-api/\"\n\nexport const loginRequest = {\n    scopes: [\"openid\",\"https://fgrsolutionsb2c.onmicrosoft.com/api/demo.read\",\"https://fgrsolutionsb2c.onmicrosoft.com/api/demo.write\"]\n    // scopes: [\"openid\",\"https://fgrsolutionsb2c.onmicrosoft.com/2820b95e-ac83-4f0a-b7dd-d1d76aeee869/demo.read\"]\n  };\n\nexport const msalConfig = {\n    auth: {\n        clientId: \"b4472f17-dacf-42ed-ad2d-4901f18d1974\", //before client was 92e748f9-a1ec-4e0d-b7fd-7dfccd9b9da1\n        authority: \"https://fgrsolutionsb2c.b2clogin.com/fgrsolutionsb2c.onmicrosoft.com/B2C_1_signupsignin1\", //before https://login.microsoftonline/com/common\n      //   redirectUri: \"https://fgrsecure.surge.sh\"\n        redirectUri: process.env.REACT_APP_LOGIN_REDIRECT_URL\n        // redirectUri: \"https://dariv94.github.io/fgr-secure-api/\"\n        // redirectUri: \"http://localhost:3000/\"\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n    },\n    system: {\t\n        loggerOptions: {\t\n            loggerCallback: (level, message, containsPii) => {\t\n                if (containsPii) {\t\t\n                    return;\t\t\n                }\t\t\n                switch (level) {\t\t\n                    case LogLevel.Error:\t\t\n                        console.error(message);\t\t\n                        return;\t\t\n                    case LogLevel.Info:\t\t\n                        console.info(message);\t\t\n                        return;\t\t\n                    case LogLevel.Verbose:\t\t\n                        console.debug(message);\t\t\n                        return;\t\t\n                    default:\t\n                        console.warn(message);\t\t\n                    // case LogLevel.Warning:\t\t\n                    //     console.warn(message);\t\t\n                        return;\t\t\n                }\t\n            }\t\n        }\t\n    }\n  };","import { useMsal } from \"@azure/msal-react\";\nimport { postLogoutRedirectUri } from \"../../authConfig\"\n\nfunction signOutClickHandler(instance) {\n    console.log(\"instance: \", instance)\n    const logoutRequest = {\n        account: instance.getAccountByHomeId(\"homeAccountId\"),\n        postLogoutRedirectUri: postLogoutRedirectUri\n    }\n    instance.logoutRedirect(logoutRequest);\n}\n\n// SignOutButton Component returns a button that invokes a redirect logout when clicked\nexport default function SignOutButton() {\n    // useMsal hook will return the PublicClientApplication instance you provided to MsalProvider\n    const { instance } = useMsal();\n\n    return <button onClick={() => signOutClickHandler(instance)}>Sign Out</button>\n};","import { useMsal } from \"@azure/msal-react\";\nimport React, { useEffect } from \"react\";\nimport { loginRequest } from \"../../authConfig\"\n\nexport default function ProfileContent(props) {\n    const { instance, accounts } = useMsal();\n\n    //The User should be Authenticated already\n    // Otherwise I would use const isAuthenticated = useIsAuthenticated();\n    useEffect(() => {\n        instance.acquireTokenSilent({\n            ...loginRequest,\n            account: accounts[0]\n        }).then(async (response) => {\n            console.log(\"RequestProfileData response:\", response)\n            props.setToken(response.accessToken)\n\n        });\n    });\n\n    return (<></>)\n}","// import { useMsal } from \"@azure/msal-react\";\nimport React, { useState } from \"react\";\n// import { loginRequest } from \"../../authConfig\"\n// import { CallMockAPIEndpoint } from \"../../api/azurefunctions\"\n\n// import { useIsAuthenticated } from \"@azure/msal-react\";\n\nexport default function APICaller(props) {\n    // const { instance, accounts } = useMsal();\n    const [apiData, setApiData] = useState(null);\n    // const [graphData, setGraphData] = useState(null);\n    // const [backendMockData, setBackendMockData] = useState(null);\n\n    // const isAuthenticated = useIsAuthenticated();\n\n    //The User should be Authenticated already\n    // Otherwise I would use const isAuthenticated = useIsAuthenticated();\n    // useEffect(() => {\n    //     instance.acquireTokenSilent({\n    //         ...loginRequest,\n    //         account: accounts[0]\n    //     }).then(async (response) => {\n    //         console.log(\"RequestProfileData response:\", response)\n    //         props.setToken(response.accessToken)\n\n    //     });\n    // }, []);\n\n    // function RequestProfileData() {\n    //     console.log(\"RequestProfileData MSAL instance\", instance)\n    //     console.log(\"RequestProfileData MSAL accounts\", accounts)\n    //     // Silently acquires an access token which is then attached to a request for MS Graph data\n    //     instance.acquireTokenSilent({\n    //         ...loginRequest,\n    //         account: accounts[0]\n    //     }).then(async (response) => {\n    //         console.log(\"RequestProfileData response:\", response)\n    //         setGraphData(response)\n\n    //     });\n    // }\n\n    async function RequestAPIData() {\n        let apicall = props.apicall\n        let response = await apicall(props.token)\n        // console.log(\"RequestAPIData:\", response)\n        // console.log(typeof(response))\n        setApiData(response)\n    }\n\n     function ResetAPIData() {\n        setApiData(\"\")\n    }\n\n\n\n    return (<>\n        <h5>API {props.name}</h5>\n        <button onClick={RequestAPIData} >CALL {props.name}</button>\n        \n        {apiData ? <>{JSON.stringify(apiData)}</> : <p>No API Data</p>}\n        <button onClick={ResetAPIData} >Reset API Data</button>\n\n    </>)\n}","import axios from \"axios\";\n\nexport async function CallMockAPIEndpoint(accessToken){\n  \n    const options = {\n      headers: {'Authorization': accessToken}\n    };\n    \n    let response = await axios.get('https://fgr-secure-api-management.azure-api.net/mock1/mockget', options);\n    // console.log(\"CallMockAPIEndpoint response: \",response)\n    \n    return response.data\n}","import axios from \"axios\";\n\nexport async function CallAzureFunction(accessToken){\n  \n    const options = {\n      headers: {'Authorization': accessToken}\n    };\n    \n    let response = await axios.get('https://fgr-secure-api-management.azure-api.net/fgr-secure-function-app-1/HttpTrigger1', options);\n    // console.log(\"CallAzureFunction response: \",response)\n    \n    return response.data\n}","import axios from \"axios\";\n\nexport async function CallAKS_KubernetesFunFact(accessToken){\n  \n    const options = {\n      headers: {'Authorization': accessToken}\n    };\n    \n    let response = await axios.get('https://fgr-secure-api-management.azure-api.net/aks/kubernetes/funfact', options);\n\n    let i = Math.floor(Math.random() * response.data.funfacts.length); \n    \n    const funfact = response.data.funfacts[i].fun_fact\n    \n    return funfact\n}\n\nexport async function CallAKS_MicrosoftFunFact(accessToken){\n  \n    const options = {\n      headers: {'Authorization': accessToken}\n    };\n    \n    let response = await axios.get('https://fgr-secure-api-management.azure-api.net/aks/microsoft/funfact', options);\n    \n    let i = Math.floor(Math.random() * response.data.funfacts.length); \n    \n    const funfact = response.data.funfacts[i].fun_fact\n    \n    return funfact\n}\n","\n// Check out https://docs.microsoft.com/en-us/azure/active-directory/develop/scenario-spa-sign-in?tabs=react\n// getting access token https://docs.microsoft.com/en-us/azure/active-directory/develop/scenario-spa-acquire-token?tabs=react\nimport { AuthenticatedTemplate, UnauthenticatedTemplate } from \"@azure/msal-react\";\nimport React, { Component } from 'react';\nimport \"./HomePage.css\"\nimport SignInButton from \"./AuthComponents/SignInButton\"\nimport SignOutButton from \"./AuthComponents/SignOutButton\"\n// import WelcomeUser from \"./WelcomUser\"\n// import ProfileContent from \"./AuthComponents/ProfileContent\"\nimport GetToken from \"./AuthComponents/GetToken\"\nimport APICaller from \"./APICaller\"\nimport { CallMockAPIEndpoint } from \"../api/apimanagementmockapi\"\nimport { CallAzureFunction } from \"../api/azurefunctions\"\nimport { CallAKS_KubernetesFunFact, CallAKS_MicrosoftFunFact } from \"../api/aks\"\n\nexport class HomePage extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            selectedFile: \"\",\n            loading: false,\n            responseImage: \"\",\n            message: \"Select a file to upload.\",\n            jwtToken: \"\"\n\n        }\n\n        this.setToken = this.setToken.bind(this)\n    }\n\n    setToken(token) {\n        this.setState({\n            jwtToken: token\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"topheader\">Secure API</h1>\n                <AuthenticatedTemplate>\n                    {/* <p>This will only render if a user is signed-in.</p>\n                    {this.state.jwtToken ? <p>TOKEN READY FOR API CALLS!</p>:<p>NO TOKEN</p>} */}\n                    {/* <WelcomeUser /> */}\n                    {/* <ProfileContent setToken={this.setToken}/> */}\n                    <GetToken setToken={this.setToken} />\n\n                    <hr></hr>\n                    <APICaller name={\"MOCK ENDPOINT\"} apicall={CallMockAPIEndpoint} token={this.state.jwtToken} />\n                    <hr></hr>\n                    <APICaller name={\"Azure Function ENDPOINT\"} apicall={CallAzureFunction} token={this.state.jwtToken} />\n                    <hr></hr>\n                    <APICaller name={\"Azure AKS ENDPOINT Kubernetes Fun Facts\"} apicall={CallAKS_KubernetesFunFact} token={this.state.jwtToken} />\n                    <hr></hr>\n                    <APICaller name={\"Azure AKS ENDPOINT Microsoft Fun Facts\"} apicall={CallAKS_MicrosoftFunFact} token={this.state.jwtToken} />\n                    <hr></hr>\n                    <SignOutButton />\n\n\n                </AuthenticatedTemplate>\n                <UnauthenticatedTemplate>\n                    {/* <p>This page will only render if a user is not signed-in.</p> */}\n                    <SignInButton />\n                </UnauthenticatedTemplate>\n\n            </div>\n        )\n    }\n}\n\n\nexport default HomePage;\n","\nimport React from \"react\";\nimport HomePage from \"./components/HomePage\"\n// import { withMsal } from \"@azure/msal-react\";\nimport { useIsAuthenticated } from \"@azure/msal-react\";\n\n// const WithMsalHomePage = withMsal(HomePage);\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props)\n// }\n//   render() {\n//       return (\n          \n//               <WithMsalHomePage instance={this.props.instance} />\n          \n//       );\n//   }\n// }\n\nfunction App(props) {\n  const isAuthenticated = useIsAuthenticated();\n  console.log(\"APP isAuthenticated: \",isAuthenticated)\n  return (\n    <>\n      <HomePage instance={props.instance} isAuthenticated={isAuthenticated}/>\n      {/* <WithMsalHomePage instance={props.instance} /> */}\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport App from './App';\nimport { msalConfig } from \"./authConfig\";\n\n// create PublicClientApplication instance\nconst publicClientApplication = new PublicClientApplication(msalConfig);\n\n// Wrap your app component tree in the MsalProvider component\nReactDOM.render(\n    <React.StrictMode>\n        <MsalProvider instance={publicClientApplication}>\n            <App instance={publicClientApplication} />\n        </ MsalProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}